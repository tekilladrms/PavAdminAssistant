// <auto-generated />
using System;
using EmployeeService.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EmployeeService.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EmployeeService.Domain.Entities.Employee", b =>
                {
                    b.Property<Guid>("Guid")
                        .HasColumnType("uuid");

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<Guid>("JobTitleId")
                        .HasColumnType("uuid");

                    b.HasKey("Guid");

                    b.ToTable("Employees", (string)null);
                });

            modelBuilder.Entity("EmployeeService.Domain.Entities.JobTitle", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.HasKey("Guid");

                    b.ToTable("JobTitles");
                });

            modelBuilder.Entity("EmployeeService.Domain.Entities.Employee", b =>
                {
                    b.OwnsOne("EmployeeService.Domain.ValueObjects.Name", "FirstName", b1 =>
                        {
                            b1.Property<Guid>("EmployeeGuid")
                                .HasColumnType("uuid");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("FirstName");

                            b1.HasKey("EmployeeGuid");

                            b1.ToTable("Employees");

                            b1.WithOwner()
                                .HasForeignKey("EmployeeGuid");
                        });

                    b.OwnsOne("EmployeeService.Domain.ValueObjects.Name", "LastName", b1 =>
                        {
                            b1.Property<Guid>("EmployeeGuid")
                                .HasColumnType("uuid");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("LastName");

                            b1.HasKey("EmployeeGuid");

                            b1.ToTable("Employees");

                            b1.WithOwner()
                                .HasForeignKey("EmployeeGuid");
                        });

                    b.OwnsOne("EmployeeService.Domain.ValueObjects.PhoneNumber", "PhoneNumber", b1 =>
                        {
                            b1.Property<Guid>("EmployeeGuid")
                                .HasColumnType("uuid");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("PhoneNumber");

                            b1.HasKey("EmployeeGuid");

                            b1.ToTable("Employees");

                            b1.WithOwner()
                                .HasForeignKey("EmployeeGuid");
                        });

                    b.Navigation("FirstName")
                        .IsRequired();

                    b.Navigation("LastName")
                        .IsRequired();

                    b.Navigation("PhoneNumber")
                        .IsRequired();
                });

            modelBuilder.Entity("EmployeeService.Domain.Entities.JobTitle", b =>
                {
                    b.OwnsOne("EmployeeService.Domain.ValueObjects.Name", "JobTitleName", b1 =>
                        {
                            b1.Property<Guid>("JobTitleGuid")
                                .HasColumnType("uuid");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("JobTitleName");

                            b1.HasKey("JobTitleGuid");

                            b1.ToTable("JobTitles");

                            b1.WithOwner()
                                .HasForeignKey("JobTitleGuid");
                        });

                    b.OwnsOne("EmployeeService.Domain.ValueObjects.PercentageOfSales", "PercentageOfSales", b1 =>
                        {
                            b1.Property<Guid>("JobTitleGuid")
                                .HasColumnType("uuid");

                            b1.Property<decimal>("Value")
                                .HasColumnType("numeric")
                                .HasColumnName("PercentageOfSales");

                            b1.HasKey("JobTitleGuid");

                            b1.ToTable("JobTitles");

                            b1.WithOwner()
                                .HasForeignKey("JobTitleGuid");
                        });

                    b.OwnsOne("EmployeeService.Domain.ValueObjects.Salary", "Salary", b1 =>
                        {
                            b1.Property<Guid>("JobTitleGuid")
                                .HasColumnType("uuid");

                            b1.Property<string>("SalaryType")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("SalaryType");

                            b1.HasKey("JobTitleGuid");

                            b1.ToTable("JobTitles");

                            b1.WithOwner()
                                .HasForeignKey("JobTitleGuid");

                            b1.OwnsOne("EmployeeService.Domain.ValueObjects.Money", "Money", b2 =>
                                {
                                    b2.Property<Guid>("SalaryJobTitleGuid")
                                        .HasColumnType("uuid");

                                    b2.Property<decimal>("Amount")
                                        .HasColumnType("numeric")
                                        .HasColumnName("Amount");

                                    b2.Property<int>("Currency")
                                        .HasColumnType("integer")
                                        .HasColumnName("Currency");

                                    b2.HasKey("SalaryJobTitleGuid");

                                    b2.ToTable("JobTitles");

                                    b2.WithOwner()
                                        .HasForeignKey("SalaryJobTitleGuid");
                                });

                            b1.Navigation("Money")
                                .IsRequired();
                        });

                    b.Navigation("JobTitleName")
                        .IsRequired();

                    b.Navigation("PercentageOfSales")
                        .IsRequired();

                    b.Navigation("Salary")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
